/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uam.pvoe.sw.selecciones.formas;


import java.util.ArrayList;
import java.util.Enumeration;
import java.util.LinkedList;
import javax.swing.AbstractButton;
import javax.swing.JCheckBox;
import javax.swing.JRadioButton;
import uam.pvoe.sw.selecciones.clases.Alumno;
import uam.pvoe.sw.selecciones.clases.Licenciatura;
import uam.pvoe.sw.selecciones.clases.Opcion;
import uam.pvoe.sw.selecciones.negocio.AdministrarAlumnos;
import uam.pvoe.sw.selecciones.negocio.AdministrarLicenciaturas;




/**
 *
 * @author ZerolCamb
 */
public class FrmSeleccionesObjetos extends javax.swing.JFrame {

    /* Lista ligada donde se agruparan los checkboxes */
    LinkedList<JCheckBox>listaChkBoxes = new LinkedList();
    
    /**
     * Creates new form FrmSeleccionesObjetos
     */
        public FrmSeleccionesObjetos() {
            initComponents();
            agruparSelecciones();
            agruparChkBoxes();
            cmbListaAlumnos.removeAllItems();
            cmbListaLicenciaturas.removeAllItems();
            llenaListaLicenciaturas();
            llenarBotonesMerce();
            llenarCheckboxes();
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGrpApoyo = new javax.swing.ButtonGroup();
        lblTitulo = new javax.swing.JLabel();
        lblLicenciatura = new javax.swing.JLabel();
        lblAlumno = new javax.swing.JLabel();
        cmbListaLicenciaturas = new javax.swing.JComboBox<>();
        cmbListaAlumnos = new javax.swing.JComboBox<>();
        btnMerece = new javax.swing.JRadioButton();
        btnNoMerece = new javax.swing.JRadioButton();
        chkPronabe = new javax.swing.JCheckBox();
        chkUam = new javax.swing.JCheckBox();
        chkCDMX = new javax.swing.JCheckBox();
        btnRegistrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(600, 400));
        setMinimumSize(new java.awt.Dimension(600, 400));

        lblTitulo.setText("Sistema de Apoyos Económicos para Alumnos");

        lblLicenciatura.setText("Selecciona la Licenciatura");

        lblAlumno.setText("Selecciona el Alumno");

        cmbListaLicenciaturas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbListaLicenciaturasActionPerformed(evt);
            }
        });

        btnMerece.setSelected(true);
        btnMerece.setText("jRadioButton1");

        btnNoMerece.setText("jRadioButton1");

        chkPronabe.setText("jCheckBox1");

        chkUam.setText("jCheckBox1");

        chkCDMX.setText("jCheckBox1");

        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnMerece)
                                    .addComponent(btnNoMerece))
                                .addGap(142, 142, 142)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chkCDMX)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(chkPronabe)
                                        .addGap(53, 53, 53)
                                        .addComponent(chkUam))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblTitulo)
                                .addComponent(lblLicenciatura)
                                .addComponent(lblAlumno)
                                .addComponent(cmbListaLicenciaturas, 0, 344, Short.MAX_VALUE)
                                .addComponent(cmbListaAlumnos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnRegistrar)))
                .addContainerGap(190, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitulo)
                .addGap(49, 49, 49)
                .addComponent(lblLicenciatura)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbListaLicenciaturas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(lblAlumno)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbListaAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(btnMerece))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chkPronabe)
                            .addComponent(chkUam))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNoMerece)
                    .addComponent(chkCDMX))
                .addGap(18, 18, 18)
                .addComponent(btnRegistrar)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbListaLicenciaturasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbListaLicenciaturasActionPerformed
        /* Recuperación de un objeto Licenciatura en una lista */
        Licenciatura licenciatura = (Licenciatura)cmbListaLicenciaturas.getSelectedItem();
        
        System.out.println(licenciatura.getNombre());
        System.out.println(licenciatura.getClave());
        
        cmbListaAlumnos.removeAllItems();
        llenarListaAlumnos(licenciatura.getClave());
    }//GEN-LAST:event_cmbListaLicenciaturasActionPerformed

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        /* Recuperacion de los elementos de un buttongroup */
        Enumeration<AbstractButton> btnGrp = btnGrpApoyo.getElements();
        Opcion resultado = null;
        Opcion beca = null;
        /* Mientras el button group tenga más elementos */
        while(btnGrp.hasMoreElements()){
            JRadioButton nextElement = (JRadioButton)btnGrp.nextElement();
            /* Si el radiobutton actual está seleccionado */
            if(nextElement.isSelected()){
                /* Se recupera el objeto almacenado con el método
                   getClientProperty, esto se hace llamandolo con la llave
                   asignada que tenga tal objeto, en este caso "llave"
                */
                resultado = (Opcion) nextElement.getClientProperty("llave");
                break;
            }
        }
        /* En un ArrayList de objetos Opcion se guardaran los checkboxes seleccionados */
        ArrayList<Opcion> seleccionados = new ArrayList<>();
        for (JCheckBox checkBox : listaChkBoxes) {
            /* Se recorre la lista donde se agruparon los checkboxes
               si el actual está seleccionado
            */
            if (checkBox.isSelected()) {
                /* Se recupera el objeto almacenado con el método
                   getClientProperty, esto se hace llamandolo con la llave
                   asignada que tenga tal objeto, en este caso "llave"
                */
                beca = (Opcion) checkBox.getClientProperty("llave");
                /* Se añade ese objeto a nuestra lista de seleccionados */
                seleccionados.add(beca);
            }
        }
        
        /* Se recupera el objeto Licenciatura de la lista/combobox de licenciaturas */
        Licenciatura licenciatura = (Licenciatura) cmbListaLicenciaturas.getSelectedItem();
        /* Se recupera el alumno de la lista/combobox de alumnos */
        Alumno alumno = (Alumno) cmbListaAlumnos.getSelectedItem();
        
        /* Se imprimen los datos obtenidos */
        System.out.println(licenciatura);
        System.out.println(alumno);
        System.out.println(resultado);
        System.out.println(beca);
    }//GEN-LAST:event_btnRegistrarActionPerformed

    /**
     * @param args the command line arguments
     */
    private void llenarListaAlumnos(String claveLicenciatura){
        /* Se añaden los alumnos a partir de la licenciatura que cursan */
        AdministrarAlumnos alumnos = new AdministrarAlumnos();
        LinkedList<Alumno> lista = alumnos.listaPorCarrera(claveLicenciatura);
        for (Alumno alumno : lista) {
            cmbListaAlumnos.addItem(alumno);
        }
    }
    private void llenaListaLicenciaturas(){
        /* Se llena la lista/combobox de licenciaturas */
        AdministrarLicenciaturas administrarLicenciaturas = new AdministrarLicenciaturas();
        LinkedList<Licenciatura> lista = administrarLicenciaturas.listaLicenciaturas();
        for (Licenciatura licenciatura : lista) {
            cmbListaLicenciaturas.addItem(licenciatura);
        }
    }
    private void llenarBotonesMerce(){
        /* Se llenan los radioButtons con objetos de la clase Opcion */
        Opcion merece = new Opcion("MERECE", "Merecedor de apoyos");
        Opcion noMerece = new Opcion("NO MERECE", "No es merecedor de apoyos");
        
        /* A los botones se les asigna el texto a partir de los objetos */
        btnMerece.setText(merece.getValor());
        btnNoMerece.setText(noMerece.getValor());
        
        /* Se "almacenan" estos objetos dentro de los botones con el método
           putClientProperty
        */
        btnMerece.putClientProperty("llave", merece);
        btnNoMerece.putClientProperty("llave", noMerece);
        
    }
    private void llenarCheckboxes(){
        /* Se llenan los checkboxes con objetos de la clase Opcion */
        Opcion pronabe = new Opcion("PRONABE", "Apoyo PRONABE");
        Opcion cdmx = new Opcion("CDMX", "Apoyo de la CDMX");
        Opcion uam = new Opcion("UAM", "Beca de la UAM");
        
        /* Se les añade el texto a partir de los objetos */
        chkCDMX.setText(cdmx.getValor());
        chkPronabe.setText(pronabe.getValor());
        chkUam.setText(uam.getValor());
        
        /* Se "almacenan" estos objetos dentro de los botones con el método
           putClientProperty
        */
        chkCDMX.putClientProperty("llave", cdmx);
        chkPronabe.putClientProperty("llave", pronabe);
        chkUam.putClientProperty("llave", uam);
        
        
        
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmSeleccionesObjetos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmSeleccionesObjetos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmSeleccionesObjetos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmSeleccionesObjetos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new FrmSeleccionesObjetos().setVisible(true);
            }
        });
    }
    
    /*Agrupa los Radio Buttons*/
    private void agruparSelecciones(){
        btnGrpApoyo.add(btnMerece);
        btnGrpApoyo.add(btnNoMerece);
       
    }
    
    /*Agrupa los CheckBoxes*/
    private void agruparChkBoxes(){
        listaChkBoxes.add(chkUam);
        listaChkBoxes.add(chkCDMX);
        listaChkBoxes.add(chkPronabe);
    }

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btnGrpApoyo;
    private javax.swing.JRadioButton btnMerece;
    private javax.swing.JRadioButton btnNoMerece;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JCheckBox chkCDMX;
    private javax.swing.JCheckBox chkPronabe;
    private javax.swing.JCheckBox chkUam;
    private javax.swing.JComboBox<Alumno> cmbListaAlumnos;
    private javax.swing.JComboBox<Licenciatura> cmbListaLicenciaturas;
    private javax.swing.JLabel lblAlumno;
    private javax.swing.JLabel lblLicenciatura;
    private javax.swing.JLabel lblTitulo;
    // End of variables declaration//GEN-END:variables
}
