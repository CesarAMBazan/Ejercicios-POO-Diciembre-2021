/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package uam.zerolcamb.formas;

import java.util.ArrayList;
import uam.zerolcamb.operaciones.LlenadoListas;

/**
 *
 * @author Zerol
 */
public class FrmListas extends javax.swing.JFrame {

    /**
     * Creates new form FrmListas
     */
    public FrmListas() {
        initComponents();
        /* Lo primero que se tiene que hacer al trabajar con listas/comboboxes
           es borrar todos los items que vienen por defecto dentro de esta
           por lo que se utiliza el metodo .removeAllItems()
        */
        cmbListaSencilla.removeAllItems();
        /* Se llama al metodo llenarListaSencilla() al construir esta ventana */
        llenarListaSencilla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbListaSencilla = new javax.swing.JComboBox<>();
        btnRegistrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cmbListaSencilla.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbListaSencilla, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRegistrar))
                .addContainerGap(272, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(cmbListaSencilla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnRegistrar)
                .addContainerGap(189, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        /* Si se clickea en el botón de registrar se va a recuperar el indice
           y la opción seleccionada de la lista/combobox
        */
        int indiceSeleccionado;
        String opcionSeleccionada;
        
        /* Para obtener el indice, se utiliza el metodo getSelectedIndex() el
           cual regresa un entero
        */
        indiceSeleccionado = cmbListaSencilla.getSelectedIndex();
        /* Para obtener la opción seleccionada, se utiliza el metodo
           getSelectedItem() el cual nos regresa un objeto de la clase Object,
           por lo que para utilizarlo como String necesitaremos realizar un
           cast a String
        */
        opcionSeleccionada = (String)cmbListaSencilla.getSelectedItem();
        
        /* Se imprime el indice y la opción seleccionada */
        System.out.println("Elegiste:");
        System.out.println(opcionSeleccionada);
        System.out.println(indiceSeleccionado);
    }//GEN-LAST:event_btnRegistrarActionPerformed

    
    private void llenarListaSencilla(){
        /* Vamos a llenar una lista sencilla con String basicos */
        LlenadoListas llenadoListas = new LlenadoListas();
        /* Recuperamos la lista de Strings de la clase llenadoListas */
        ArrayList<String> lista = llenadoListas.llenarLista();
        /* Y con un for-each añadimos cada una de esos String a nuestra
           lista/combobox
        */
        for (String string : lista) {
            cmbListaSencilla.addItem(string);
        }
    }
    private void llenarListaDos(){
        /* Metodo para probar como añadir String a una lista/combobox */
        cmbListaSencilla.addItem("+");
        cmbListaSencilla.addItem("-");
        cmbListaSencilla.addItem("*");
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmListas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmListas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmListas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmListas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmListas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JComboBox<String> cmbListaSencilla;
    // End of variables declaration//GEN-END:variables
}
